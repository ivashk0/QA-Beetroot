(1)
Термос
Требования:
1. материал - алюминий. Почему? Устойчив к падением, при падении не разлетаются части, образовывается только вмятична/царапина, дольше держит темпоратуру водыю, не впитывает запахи жидкости.
2. покрытие - soft-touch. Почему? Удобно держать в руке, в том числе влажной рукой.
3. крышка - герметичная. Почему? Не прольется в сумке/рюкзаке, дольше удерживает темпаратуру воды.
4. клапан - функциональный. Почему? Открывается при нажатии и удержании на кнопку, избежать произвольного открытия или не думать от том что клапан нужно закрыть.
5. держатель - с проворотом. Почему? Возможнсть прицепить на рюкзак или подвесить.
6. размер - стандартизирован. Почему? Возможность не только брать с собой, но и что бы помещался в держатель для велосипедо или в подстаканник авто.

(2)
verification для термоса - есть корпус, есть крышка, размер соответсвует.
validation для термоса - крышка открывается, вода не протекает, не созкальзывает с рук.
Термос прошел verification, но не прошел validation - термос нужного размера и материала, но:
- при использовании клапан для воды не работает
- крышка не открывается
- держатель без отверстия и этим не удобно пользоватся

(3)
1. Тестирование показывает наличие дефектов - можно найти дефекты, но нельзя доказать что их нет вообще.
2. Исчерпывающее тестирование невозможно - невозможно протестировать все сценарии использования, все равно какой баг упустим.
3. Раннее тестирование - чем раньше начать тестирование, тем меньше будет потерь для бизнеса в целом.
4. Скопление дефектов - если в каком-то сервисе или фиче нашли 1 дефект, то есть большая вероятность, что "рядом" есть и другой дефект/баг.
5. Парадокс пестицида - смысл в том, что со временем нужно менять подход сценарий тестирования, не рекомендуется использвоть одни сценарии на протяжении долгого времени.
6. Тестирование зависит от контекста - не все продукты (сервисы) тестируются одинаково, необходимо под каждый сервис находить свой подход (
7. Заблуждение об отсутствии ошибок - все баги найти невозможно, если не удалось найти баги, это не значит, что их не вообще.
